% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classif_plot.R
\name{classif_plot}
\alias{classif_plot}
\title{2Dmito Plot with Classifications}
\usage{
classif_plot(dataMats, classifs = NULL, postpred = NULL, colAlpha = 1, ...)
}
\arguments{
\item{dataMats}{A list of matrices containing the control data, named \code{ctrl},
and the patient data, \code{pts}. Where the first column represents the data
for protein along the x-axis of the 2Dmito plot and the second column is the
y-axis data.}

\item{classifs}{A numeric vector where the i-th element is the probability
that the fibre in the i-th observation of the patient data matrix is
deficient The default is \code{NULL}, if this is the case the fibres are plotted as
green.}

\item{postpred}{A \link{data.frame} whose columns contain the 95-th percentile
posterior predictive interval and the corresponding x-axis values for a
linear regression model for this dataset. The columns should be labelled;
\code{mtiochan}, \code{lwrNorm}, \code{medNorm} and \code{uprNorm}. This is the form of the
output given by \link{inference}, in the \code{POSTPRED}.}

\item{colAlpha}{Transparency value of the plotted points. A numeric between
0.0 and 1.0.}
}
\value{
NULL.
}
\description{
Plots control and patient data with patient data classifications on a scale
from blue to red (healthy to deficient).
}
\examples{
exampleData = get_exampleData()
mitochan = "VDAC"
# all channels available in the dataset
channelsAll = unique(exampleData[,"channel"])
# remove mitochan from the channels of interest
channels = channelsAll[ channelsAll!=mitochan ]
sbj = unique(exampleData$sampleID)
ctrlID = grep("C", sbj, value=TRUE)
pts = grep("C", sbj, value=TRUE, invert=TRUE)

chan = channels[1]
pat = "P01"

data_mat = getData_mats(exampleData, channels=c(mitochan, chan), ctrlID=ctrlid, pts=pat, getIndex=TRUE)
data_mat$ctrl = data_mat$ctrl
data_mat$pts = data_mat$pts

infOut = inference( data_mat )
class = apply(infOut$classif, 2, mean)

classif_plot(dataMats=data_mat, classifs=class, postpred=infOut$postpred, xlab=mitochan, ylab=chan)

}
