% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/postPlot.R
\name{postPlot}
\alias{postPlot}
\title{Plot Posteriors, Predictions and Classifications for \code{\link[=inference]{inference()}}}
\usage{
postPlot(
  post,
  prior = NULL,
  postpred,
  priorpred = NULL,
  dataMats,
  classifs,
  var.names = c("mu_m", "tau_m", "tau_norm", "mu_c", "tau_c", "probdiff", "m", "c"),
  xlabs = NULL,
  chan = "",
  mitochan = "",
  patient = "",
  chains = 1,
  ...
)
}
\arguments{
\item{post}{Either a \link{data.frame} containing the posterior draws of the model
or the a filepath to a saved file, whose columns are the posterior draws from
the output. Both should be output of the \link{inference}.}

\item{prior}{Either a \link{data.frame} containing draws from the prior beliefs
about model parameters or the a filepath to a saved file, whose columns are
the prior draws. Both should be output from the output of the
\link{inference}. The default is NULL. If this is true, the
prior beliefs are not added to the plots.}

\item{postpred}{A \link{data.frame} containing posterior predictions from the
model, as outputed from \link{inference}, or a filepath to a
saved file of this output.}

\item{priorpred}{A \link{data.frame} containing prior predictions from the model,
as outputed from \link{inference}, or a filepath to a saved file
of this output. The default is NULL. If this is true, no prior predictions
will be plotted.}

\item{dataMats}{A character vector describing the names of the variables to
be plotted as passed to \link{rjags} during inference. The default list is the
full list of parameters in the model.}

\item{classifs}{A numeric vector of the probabilies that each fibre in the
patient datasets are not like control.}

\item{var.names}{A named character vector the name of the variables to be
plotted on the density plots. The default is NULL, if this is TRUE then names
as given in 'var.names' will be plotted.}

\item{xlabs}{A character vector of names of variables as they should be added
to the plot.}

\item{chan}{y axis label to be placed on the final classification
and posterior predictive model for the patient sample. Default is "".}

\item{mitochan}{x axis label to be placed on the final classification
and posterior predictive model for the patient sample. Default is "".}

\item{chains}{The number of chains present in the posterior draws. The
default is 1.}

\item{...}{Any additional parameters to be passed to the plotting functions
e.g. lwd, cex, etc.}

\item{pat_id}{The subject identifier, to be placed in the top left corner of the
first plot. The default is "".}
}
\value{
NULL.
}
\description{
For plotting the model output of the \link{inference}
function. Plotted are the priors/parent distributions and posteriors of
variables in the model as well as the 95\\% predictive posterior for the
like-control linear model and the classifications.
}
\details{
If multiple chains are present in the posterior files, then the density plots
ignore this and plot all draws as though they were one - assuming that if the
the chains do not converge to the same stationary distribution this would be
evident and produce a multi-modal plot. The posterior predictive plot does
not ignore this and will plot each posterior predictive over the
classification plot. This will indicate if there are differences in the
chains as the posterior predictives will different.
}
\examples{
exampleData = get_exampleData()
# the measure of mitochondrial mass - the x-axis of the 2D mito plot
mitochan = "VDAC"
# all channels available in the dataset
channelsAll = unique(exampleData[,"channel"])
# remove mitochan from the channels of interest
channels = channelsAll[ channelsAll!=mitochan ]
sbj = unique(exampleData$sampleID)
ctrlid = c("C01", "C02", "C03", "C04")
pts = sbj[ !(sbj \%in\% ctrlid) ]

chan = channels[1]
pat = pts[1]

data_mat = getData_mats(exampleData,
                        cord=c(mitochan, chan),
                        ctrlID=ctrlid,
                        pts=pat,
                        getIndex=TRUE)

infOut = stan_inference( data_mat )
class = apply(infOut$classif, 2, mean)

postPlot(post=infOut$POST, prior=infOut$PRIOR, classifs=class, postpred=infOut$POSTPRED,
         dataMats=data_mat)

}
