% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MCMCplot.R
\name{MCMCplot}
\alias{MCMCplot}
\title{Diagnostic MCMC Output Plots}
\usage{
MCMCplot(
  post,
  prior = NULL,
  lag = 20,
  nRow = NULL,
  colPost = analysis2Dmito::alphaPink(1),
  colPrior = analysis2Dmito::alphaGreen(1),
  main_title = "",
  ...
)
}
\arguments{
\item{post}{A file path to saved output file or a \link{data.frame} containing the MCMC output. Where each column represents a different variable.}

\item{prior}{A file path to a saved output file or a \link{data.frame} constraining prior draws. The kernel density estimate of this will be added to the plot of the KDE for the posterior of the variable, if nothing is passed nothing is added to the plot.}

\item{lag}{The maximum lag index used in the autocorrelation plot.}

\item{nRow}{The number of rows in the plotting environment, the default is NULL. If this is true then the number of variables will be used.}

\item{colPost}{An appropriate colour definition to be used for the kernel density estimate of the posterior distribution for all variables.}

\item{colPrior}{An appropriate colour definition to be used for the kernel density estimate of the prior distribution.}

\item{...}{Any parameters passed to the plotting environment created by the \code{\link[=par]{par()}}.}
}
\value{
NULL.
}
\description{
Plot the trace, autocorrelation and kernel density estimate for MCMC output.
For each variable present the three are plotted in a single row. The number
of rows in the plotting environment can be user defined.
}
\details{
If a file path is passed to the function it is read using the
\link[data.table:fread]{data.table::fread} function and then converted to a \link{data.frame}. The plotting environment is created within
the function using the \link{par} command, it is also ended within the function.
The kernel density estimates (KDEs) of the priors and posteriors are
calculated using the default \link{density} function.
}
\examples{
exampleData = get_exampleData()
#' # the measure of mitochondrial mass - the x-axis of the 2D mito plot
mitochan = "VDAC"
# all channels available in the dataset
channelsAll = unique(exampleData[,"channel"])
# remove mitochan from the channels of interest
channels = channelsAll[ channelsAll!=mitochan ]
sbj = unique(exampleData$sampleID)
ctrlID = grep("C", sbj, value=TRUE)
pts = grep("C", sbj, value=TRUE, invert=TRUE)

chan = channels[1]
pat = pts[1]

data_mat = getData_mats(exampleData, channels=c(mitochan, chan), ctrlID=ctrlID, pts=pat)

infOut = stan_inference(data_mat)

MCMCplot(infOut$post, infOut$prior, nRow=3)

}
